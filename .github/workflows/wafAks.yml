name: Well architected aks on Azure
on: workflow_dispatch

permissions:
  id-token: write
  contents: read

jobs:
  deploy-terraform:
    runs-on: ubuntu-latest
    steps:
      # login to azure with service principal
      - name: Log in with Azure CLI
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          allow-no-subscriptions: true
        #   creds: ${{ secrets.AZURE_CREDENTIALS }}
      # Test azure connection
      - name: Azure Cli test
        uses: azure/CLI@v1
        with:
          azcli-version: 2.0.72
          inlineScript: |
            az account show 
            az storage -h
      # Check the repo
      - name: Checkout
        uses: actions/checkout@v3

      # Install terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      # Terraform init
      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init
        # env:
        #   TF_VAR_AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        #   TF_VAR_AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        #   TV_VAR_AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      # Checks that all terraform configuration files adhere to a canonical format
      - name: Terraform fmt
        working-directory: ./terraform
        run: terraform fmt -check

      - name: Terrraform plan
        working-directory: ./terraform
        run: terraform plan -out tfplan -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" -var="script_storage_account_name=${{ secrets.SCRIPT_STORAGE_ACCOUNT_NAME }}" -var="script_storage_account_key=${{ secrets.SCRIPT_STORAGE_ACCOUNT_KEY }}"

        # Terraform apply
      - name: Terraform apply
        working-directory: ./terraform
        run: terraform apply -auto-approve tfplan

      # Generates an execution plan for Terraform
      # An exit code of 0 indicates no changes, 1 a terraform failure, 2 there are pending changes.
    #   - name: Terraform plan
    #     id: tf-plan
    #     working-directory: ./terraform
    #     run: |
    #       export exitcode=0
    #       terraform plan -detailed-exitcode -no-color -out tfplan || export exitcode=$?

    #       echo "exitcode=$exitcode" >> $GITHUB_OUTPUT

    #       if [ $exitcode -eq 1 ]; then
    #         echo Terraform Plan Failed!
    #         exit 1
    #       else
    #         exit 0
    #       fi

    # Save plan to artifacts
    #   - name: Publish Terraform plan
    #     uses: actions/upload-artifact@v3
    #     with:
    #       name: tfplan
    #       path: ./terraform/tfplan
